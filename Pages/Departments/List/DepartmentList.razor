@page "/catalogo/departamentos"

@using RAS823_MC_CiudadMunicipal_FrontEnd.Dto.Department
@using RAS823_MC_CiudadMunicipal_FrontEnd.Pages.Departments.Create
@using RAS823_MC_CiudadMunicipal_FrontEnd.Pages.Departments.Edit
@using RAS823_MC_CiudadMunicipal_FrontEnd.Pages.Templates.TableFilters
@using RAS823_MC_CiudadMunicipal_FrontEnd.Pages.Departments.LoadMassive
@inherits DepartmentListBase

<div class="container-fluid">

    <!-- ========== title-wrapper start ========== -->
    <div class="title-wrapper pt-30">
        <div class="row align-items-center header-container">
            <div class="col">
                <div class="title container-title">
                    <h3 class="principal-title">Mantenimiento de Departamentos</h3>
                </div>
            </div>
            <!-- end col -->
            <div class="col">
                <div class="breadcrumb-wrapper">
                    <nav aria-label="breadcrumb">
                        <ol class="breadcrumb">
                            <li class="breadcrumb-item">
                                <a>Cátalogo</a>
                            </li>
                            <li class="breadcrumb-item active" aria-current="page">
                                Departamentos
                            </li>
                        </ol>
                    </nav>
                </div>
            </div>
            <!-- end col -->
        </div>
        <!-- end row -->
    </div>
    <!-- ========== title-wrapper end ========== -->
    <!-- Invoice Wrapper Start -->
    <div class="invoice-wrapper">
        <div class="row">
            <div class="col-12">
                <div class="invoice-card card-style mb-30">
                    <div class="m-2 container-button-principal">
                        <AuthorizeScopeDirective Scope="Create:Department">
                            <Button Text="Agregar" Icon="bi bi-plus" @onclick="goToCreate" />
                            <Button Text="Subir Masivo" Icon="bi bi-file-earmark-excel-fill" @onclick="openModalMassiveLoad" Color="Color.Secondary" />
                        </AuthorizeScopeDirective>
                    </div>
                    @* @if (_getUserFilterResponse == null)
                    {
                    <span>No Hay Usuarios Registrados</span>
                    }
                    else
                    { *@
                    <Table TItem="DepartmentResponse" @ref=Table PageItemsSource="PageItems" TableSize="TableSize.Normal" RenderMode="TableRenderMode.Table"
                           IsPagination="true"
                           IsStriped="true" IsBordered="true" OnQueryAsync="@OnQueryAsync"
                           ShowSkeleton="true">
                        <TableColumns>
                            @* Filterable activar filtros *@
                            <TableColumn @bind-Field="@context.Name" Width="170" TextWrap="true" Filterable="true" Text="Nombre Departamento">
                                <FilterTemplate>
                                    <TextFilter Placeholder="Buscar por nombre"></TextFilter>
                                </FilterTemplate>
                            </TableColumn>
                            <TableColumn @bind-Field="@context.EmailAddress" Width="170" TextWrap="true" Filterable="false" Text="Correo Departamento">
                                <Template Context="value">
                                    @if (!string.IsNullOrEmpty(value.Row.EmailAddress))
                                    {
                                        <div class="table-cell is-wrap">
                                            @value.Row.EmailAddress
                                        </div>
                                    }
                                    else
                                    {
                                        <div class="table-cell is-wrap">
                                            Sin Asignar
                                        </div>
                                    }
                                </Template>
                            </TableColumn>
                            <TableColumn @bind-Field="@context.UserNameLeader" Width="500" TextWrap="true" Filterable="false" Text="Jefatura">
                                <Template Context="value">
                                    @if (!string.IsNullOrEmpty(value.Row.UserNameLeader))
                                    {
                                        <div class="table-cell is-wrap">
                                            <ul>
                                                <li>Nombre: @value.Row.UserNameLeader </li>
                                                <li>Correo: @value.Row.EmailLeader  </li>
                                                <li>Identificación: @value.Row.IdentificationLeader  </li>
                                                <li>Número: @value.Row.PhoneLeader  </li>
                                            </ul>
                                        </div>
                                    }
                                    else
                                    {
                                        <div class="table-cell is-wrap">
                                            Sin Asignar
                                        </div>
                                    }
                                </Template>
                            </TableColumn>

                            @*      <TableColumn @bind-Field="@context.Enabled" Width="180" Text="Estado">
                            <Template Context="value">
                            @if (value.Row.Enabled)
                            {
                            <div class="text-success">Habilitado</div>
                            }
                            else
                            {
                            <div class="text-danger">Deshabilitado</div>
                            }
                            </Template>
                            </TableColumn> *@

                            <TableColumn @bind-Field="@context.Id" Text="" Width="80">
                                @* Template Botones *@
                                <Template Context="v">
                                    <div class="custom-button-container">
                                        <AuthorizeScopeDirective Scope="Edit:Department">
                                            <Button Text="Editar" Icon="bi bi-pencil-fill item-button" @onclick='(() => openEdit(v))' />
                                        </AuthorizeScopeDirective>

                                        <AuthorizeScopeDirective Scope="AssingUser:Department">
                                            @if (!string.IsNullOrEmpty(v.Row.UserNameLeader))
                                            {
                                                <Button Text="Control Usuario" Icon="bi bi-person-fill-gear item-button" @onclick='(() => openControlUserAssign(v))' Color="Color.Secondary" />
                                            }
                                        </AuthorizeScopeDirective>

                                        <AuthorizeScopeDirective Scope="Edit:Department">
                                            <Button Text="Eliminar" Icon="bi bi-trash-fill item-button" @onclick='(() => deleteInfo(v))' Color="Color.Danger" />
                                        </AuthorizeScopeDirective>
                                    </div>
                                </Template>
                            </TableColumn>

                        </TableColumns>
                    </Table>
                </div>
                <!-- End Card -->
            </div>
            <!-- ENd Col -->
        </div>




    </div>
</div>


<Modal @ref="ModalCreate" OnShownAsync="OnShownCallbackAsync">
    <ModalDialog IsCentered="true" Title="Creación departamento" ShowCloseButton="false" ShowSaveButton="false" ShowHeaderCloseButton="true" Size="Size.Large">
        <BodyTemplate>
            <DepartmentCreate ActionChild="ActionComponentFather" managementDepartmentDto="managementDepartmentDto" principalUserSelected="principalUserSelected" listUserToAssign="listUserToAssign"></DepartmentCreate>
        </BodyTemplate>
    </ModalDialog>
</Modal>


<Modal @ref="ModalEdit" OnShownAsync="OnShownCallbackEditAsync">
    <ModalDialog IsCentered="true" Title="Edición departamento" ShowCloseButton="false" ShowSaveButton="false" ShowHeaderCloseButton="true" Size="Size.Large">
        <BodyTemplate>
            <DepartmentEdit ActionChild="ActionEditComponentFather" IsEditable="IsEditable" managementDepartmentDtoForEdit="managementDepartmentDtoForEdit" principalUserSelected="principalUserSelected" listUserToAssign="listUserToAssign"></DepartmentEdit>
        </BodyTemplate>
    </ModalDialog>
</Modal>

<Modal @ref="ModalLoadMassive" OnShownAsync="OnShownCallbackModalLoadAsync">
    <ModalDialog IsCentered="true" Title="Subir información masiva" ShowCloseButton="false" ShowSaveButton="false" ShowHeaderCloseButton="true" Size="Size.ExtraLarge">
        <BodyTemplate>
            <DepartamentLoadMassiveBase _listUserToAssign="listUserToAssign"
                                        ActionChild="ActionModalAssignComponentFather" listDepartamentLoadedExcel="listDepartamentLoadedExcel"></DepartamentLoadMassiveBase>
        </BodyTemplate>
    </ModalDialog>
</Modal>
